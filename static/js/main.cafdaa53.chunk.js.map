{"version":3,"sources":["reducers/tasks.js","reducers/index.js","store.js","components/TaskBox/index.js","App.js","index.js"],"names":["initialState","tasks","task","rootReducer","combineReducers","state","action","type","payload","filter","id","map","checked","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","TaskBox","props","useState","setReload","dispatch","useDispatch","useSelector","useEffect","className","onChange","e","nTask","title","date","target","nArray","index","findIndex","elt","localStorage","setItem","JSON","stringify","onClick","App","newTask","setNewTask","Date","day","setDay","erreur","setErreur","getItem","parse","nbrTasks","nbrTasksDone","nbrTasksWaits","outPut","stToday","getFullYear","getMonth","getDate","i","forEach","push","placeholder","value","parseInt","Math","random","preventDefault","undefined","setTimeout","d","setDate","toDateString","whatToRender","length","reverse","style","textAlign","color","margin","letterSpacing","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cafdaa53.chunk.js","sourcesContent":["const initialState = { tasks: [], task: null };\r\n\r\n// eslint-disable-next-line\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case \"ADD_TASK\":\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, payload],\r\n            };\r\n        case \"DELETE_TASK\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter((task) => task.id !== payload.id),\r\n            };\r\n        case \"EDIT_TASK\":\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map((task) =>\r\n                    task.id === payload.id\r\n                        ? { ...task, checked: payload.checked }\r\n                        : task\r\n                ),\r\n            };\r\n        case \"GET_TASK\":\r\n            return {\r\n                ...state,\r\n                task: payload,\r\n            };\r\n        case \"GET_TASKS\":\r\n            return {\r\n                ...state,\r\n                tasks: payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport tasks from \"./tasks\";\r\n\r\nconst rootReducer = combineReducers({\r\n    tasks,\r\n});\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./TaskBox.css\";\r\n\r\nconst TaskBox = (props) => {\r\n    const [reload, setReload] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const tasks = useSelector((state) => state.tasks.tasks);\r\n\r\n    useEffect(() => {\r\n        setReload(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"task-box\">\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={props.task.checked}\r\n                onChange={(e) => {\r\n                    const nTask = {\r\n                        id: props.task.id,\r\n                        title: props.task.title,\r\n                        date: props.task.date,\r\n                        checked: e.target.checked,\r\n                    };\r\n                    dispatch({ type: \"GET_TASK\", payload: nTask });\r\n                    dispatch({\r\n                        type: \"EDIT_TASK\",\r\n                        payload: {\r\n                            id: props.task.id,\r\n                            checked: e.target.checked,\r\n                        },\r\n                    });\r\n                    const nArray = [...tasks];\r\n                    const index = nArray.findIndex(\r\n                        (elt) => elt.id === props.task.id\r\n                    );\r\n                    nArray[index] = { ...nTask };\r\n                    localStorage.setItem(\"tasks\", JSON.stringify(nArray));\r\n                    setReload(true);\r\n                }}\r\n            />\r\n            <div\r\n                className={`task-title ${\r\n                    props.task.checked ? `decorated` : ``\r\n                }`}\r\n            >\r\n                {props.task.title}\r\n            </div>\r\n            <div className=\"actions\">\r\n                <div\r\n                    className=\"remove-task\"\r\n                    onClick={() => {\r\n                        dispatch({\r\n                            type: \"DELETE_TASK\",\r\n                            payload: { id: props.task.id },\r\n                        });\r\n                        const nArray = tasks.filter(\r\n                            (task) => task.id !== props.task.id\r\n                        );\r\n                        localStorage.setItem(\"tasks\", JSON.stringify(nArray));\r\n                        setReload(true);\r\n                    }}\r\n                >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskBox;\r\n","import React from \"react\";\r\nimport TaskBox from \"./components/TaskBox\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n    const tasks = useSelector((state) => state.tasks.tasks);\r\n\r\n    const [newTask, setNewTask] = useState({ checked: false });\r\n    const [reload, setReload] = useState(false);\r\n    const [day, setDay] = useState(new Date());\r\n    const [erreur, setErreur] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"tasks\")) {\r\n            dispatch({\r\n                type: \"GET_TASKS\",\r\n                payload: JSON.parse(localStorage.getItem(\"tasks\")),\r\n            });\r\n        }\r\n        setReload(false);\r\n    }, []);\r\n\r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            newTask.title === undefined ||\r\n            newTask.date === undefined ||\r\n            newTask.title === \"\" ||\r\n            newTask.date === \"\"\r\n        ) {\r\n            setErreur(\"Field is empty\");\r\n            setTimeout(() => setErreur(\"\"), 1000);\r\n        } else {\r\n            dispatch({ type: \"ADD_TASK\", payload: newTask });\r\n            localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\r\n            setReload(true);\r\n        }\r\n    };\r\n\r\n    let nbrTasks = 0;\r\n    let nbrTasksDone = 0;\r\n    let nbrTasksWaits = 0;\r\n    const outPut = [];\r\n    const stToday = `${day.getFullYear()}-0${\r\n        day.getMonth() + 1\r\n    }-${day.getDate()}`;\r\n    let i = 0;\r\n    tasks.forEach((task) => {\r\n        if (task.date === stToday) {\r\n            outPut.push(<TaskBox key={i} task={task} />);\r\n            nbrTasks++;\r\n            if (task.checked) {\r\n                nbrTasksDone++;\r\n            } else {\r\n                nbrTasksWaits++;\r\n            }\r\n            i++;\r\n        }\r\n    });\r\n\r\n    const whatToRender = () => {\r\n        const d = new Date();\r\n        if (d.getDate() === day.getDate()) {\r\n            return \"Today\";\r\n        } else if (d.getDate() === day.getDate() + 1) {\r\n            return \"Yesterday\";\r\n        } else if (d.getDate() === day.getDate() - 1) {\r\n            return \"Tommorow\";\r\n        } else return day.toDateString();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>My Todo List</h1>\r\n            <div className=\"flex-container\">\r\n                <div className=\"content\">\r\n                    <div className=\"add-task\">\r\n                        <form>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Write your task\"\r\n                                onChange={(e) =>\r\n                                    setNewTask({\r\n                                        ...newTask,\r\n                                        title: e.target.value,\r\n                                        id: parseInt(\r\n                                            Math.random() * 10000000000\r\n                                        ),\r\n                                    })\r\n                                }\r\n                            />\r\n                            <input\r\n                                type=\"date\"\r\n                                onChange={(e) =>\r\n                                    setNewTask({\r\n                                        ...newTask,\r\n                                        date: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                            <button onClick={onClick}>Add</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className={`erreur ${erreur !== \"\" ? \"visible\" : \"\"}`}>\r\n                        {erreur}\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"control-date\">\r\n                        <div\r\n                            className=\"prev\"\r\n                            onClick={() => {\r\n                                const d = new Date();\r\n                                d.setDate(day.getDate() - 1);\r\n                                setDay(d);\r\n                            }}\r\n                        >\r\n                            <i className=\"fas fa-chevron-left\"></i>\r\n                        </div>\r\n                        <div className=\"actual\">{whatToRender()}</div>\r\n                        <div\r\n                            className=\"next\"\r\n                            onClick={() => {\r\n                                const d = new Date();\r\n                                d.setDate(day.getDate() + 1);\r\n                                setDay(d);\r\n                            }}\r\n                        >\r\n                            <i className=\"fas fa-chevron-right\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-tasks\">\r\n                        {outPut.length !== 0 ? (\r\n                            outPut.reverse()\r\n                        ) : (\r\n                            <div\r\n                                style={{\r\n                                    textAlign: \"center\",\r\n                                    color: \"#ababab\",\r\n                                    margin: \"18px auto 10px\",\r\n                                    letterSpacing: \"0.8px\",\r\n                                }}\r\n                            >\r\n                                No Tasks For Today.\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"stats\">\r\n                    <h2>Statistics</h2>\r\n                    <hr />\r\n                    <ul>\r\n                        <li>\r\n                            Total tasks today : <span>{nbrTasks}</span>\r\n                        </li>\r\n                        <li>\r\n                            Tasks completed :{\" \"}\r\n                            <span style={{ color: \"#00fa9a\" }}>\r\n                                {nbrTasksDone}\r\n                            </span>\r\n                        </li>\r\n                        <li>\r\n                            Tasks waiting for you :{\" \"}\r\n                            <span style={{ color: \"#ff0000\" }}>\r\n                                {nbrTasksWaits}\r\n                            </span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}